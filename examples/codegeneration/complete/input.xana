i, n, j :: int
c :: char

pair :: defstruct do
    integer :: int
    character :: char
end


def p() :: void do
end

def f(r :: double, e :: int) :: int do
    real :: double
    c :: char
    real = pair.character as double + (pair.integer) as double + r + e as double
    c = '0'
    return c as int
end

matrix :: [10 :: [10 :: int]]

def fill(row :: int, value :: int, increment :: int) :: void do
    i, inc :: int
    i = 0
    inc = increment
    while i < 10 do
        matrix[row][i] = value + inc
        i = i + 1
        inc = inc + increment
    end
end

def show(row :: int) :: void do
    i :: int
    i = 0
    while i < 10 do
        puts '(', row, ',', i, ')', ':', matrix[row][i], ' '
        i=i+1
    end
    puts '\n'
end

def main() do
    i :: int

    p()
    i = 0
    pair.character = '0'
    pair.integer = '0' as int
    puts f(i as double,(pair.character) as int), '\n'

    f(1.3, 2)

    i = 0
    j = 0
    while i < 10 do
        fill(i, j, 1)
        show(i)
        i=i+1
        j=i*10
    end
end
