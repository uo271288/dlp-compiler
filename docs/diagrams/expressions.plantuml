@startuml Expressions
skinparam style strictuml
skinparam monochrome true


interface ASTNode {
    getLine(): int
    getColumn(): int
}

interface Expression

class IntLiteral {
    value: int
}

class RealLiteral {
    value: double
}

class CharLiteral {
    value: char
}

class UnaryMinus {
    expression: Expression
}

class Variable{
    name: String
}

class Arithmetic {
    operand1: Expression
    operand2: Expression
    operator: String
}

class Cast {
    expression: Expression
    type: Type
}

class Comparison {
    operand1: Expression
    operand2: Expression
    operator: String
}

class Not {
    expression: Expression
}

class Logical {
    operand1: Expression
    operand2: Expression
    operator: String
}

class FunctionInvocation {
    var: Variable
    args: List<Expression>
}

class ArrayAccess {
    array: Expression
    index: Expression
}

class FieldAccess {
    expression: Expression
    field: String
}

ASTNode <|-- Expression
Expression <|.. IntLiteral
Expression <|.. RealLiteral
Expression <|.. CharLiteral
Expression <|.. UnaryMinus
Expression <|.. Variable
Expression <|.. Arithmetic
Expression <|.. Cast
Expression <|.. Comparison
Expression <|.. Not
Expression <|.. Logical
Expression <|.. FunctionInvocation
Expression <|.. FieldAccess
Expression <|.. ArrayAccess

@enduml
